/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Entity.Empleado;
import Entity.Usuario;
import dao.empleadoDao;
import dao.usuarioDao;
import daoMysql.empleadoDaoMysql;
import daoMysql.usuarioDaoMysql;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Adan
 */
public class usuarioInterfaz extends javax.swing.JFrame {

    private Usuario usuari;
    
    public Usuario getUsuario(){
        return usuari;
    }
    
    /**
     * Creates new form usuarioInterfaz
     */
    
    
    private empleadoDao daoE = new empleadoDaoMysql();
    private usuarioDao daoU = new usuarioDaoMysql();
    
    public usuarioInterfaz(Usuario usuari) {
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        this.usuari = usuari;
        
        daoE.setUsuario(getUsuario());
        
        grupoBotones.add(Gerente);
        grupoBotones.add(Empleado);
        grupoBotones.add(Contador);
        
        activarBotenes(false);
        cargarComboBox();
    }
    

    // PARA ALINEAR LOS DATOS DE LA TABLA
    private void alinear(){
       DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
       tcr.setHorizontalAlignment(SwingConstants.LEFT);
               
       tableUsuarios.getColumnModel().getColumn(0).setCellRenderer(tcr);
       tableUsuarios.getColumnModel().getColumn(1).setCellRenderer(tcr);
       tableUsuarios.getColumnModel().getColumn(2).setCellRenderer(tcr);
    }
    
    //PARA MOSTRAR EL CONTENIDO EN LA TABLA 
    private void agregaEnTabla(List <Usuario> listaUsuario){
        
        DefaultTableModel modelo = (DefaultTableModel) tableUsuarios.getModel();
        modelo.setRowCount(0);
        Object []emp=new Object[6];
        for (int i=0; i<listaUsuario.size(); i++){
            Usuario usuario = listaUsuario.get(i);
            
            emp[0] = usuario.getCodigo();
            emp[1] = usuario.getApellidoP()+ " " +usuario.getApellidoM()+ " " + usuario.getNombre();
            emp[2] = usuario.getRole();
            
            
            modelo.addRow(emp);
        }
        
        alinear();
    }
    
    //ACTIVAR BOTONES Y DESACTIVAR    
    private void activarBotenes(boolean activo){
            agregaCuota.setEnabled(activo);
            agregaEmpleado.setEnabled(activo);
            agregaNomina.setEnabled(activo);
            
            modificaCuota.setEnabled(activo);
            modificaEmpleado.setEnabled(activo);
            modificaNomina.setEnabled(activo);
            
            eliminaCuota.setEnabled(activo);
            eliminaEmpleado.setEnabled(activo);
            eliminaNomina.setEnabled(activo);
            
            ///
            btnTodo.setEnabled(activo);
    }
    
    private void activaBotonesConsulta(boolean activo){
        btnActualiza.setEnabled(activo);
        btnEliminar.setEnabled(activo);
    }

    //Inicializa y carga los box de empleados desde la DB
    private void cargarComboBox(){
        DefaultComboBoxModel model = new DefaultComboBoxModel();
           
        List <Empleado> listaEmpleado = daoU.obteneEmpleados();
        for(int j=0; j<listaEmpleado.size(); j++){
            model.addElement(listaEmpleado.get(j));
        }
        
        empleadosBox.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.y
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotones = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        agregaNomina = new javax.swing.JRadioButton();
        eliminaNomina = new javax.swing.JRadioButton();
        modificaNomina = new javax.swing.JRadioButton();
        modificaEmpleado = new javax.swing.JRadioButton();
        eliminaEmpleado = new javax.swing.JRadioButton();
        agregaEmpleado = new javax.swing.JRadioButton();
        modificaCuota = new javax.swing.JRadioButton();
        eliminaCuota = new javax.swing.JRadioButton();
        agregaCuota = new javax.swing.JRadioButton();
        lblNomina = new javax.swing.JLabel();
        lblEmpleado = new javax.swing.JLabel();
        lblCuota = new javax.swing.JLabel();
        empleadosBox = new javax.swing.JComboBox<>();
        Empleado = new javax.swing.JRadioButton();
        Gerente = new javax.swing.JRadioButton();
        Contador = new javax.swing.JRadioButton();
        txtContrasenaI = new javax.swing.JPasswordField();
        txtContrasenaII = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnTodo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUsuarios = new javax.swing.JTable();
        btnActualiza = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnUsuarios = new javax.swing.JToggleButton();
        lblNomina1 = new javax.swing.JLabel();
        agregaNominaActualiza = new javax.swing.JRadioButton();
        eliminaNominaActualiza = new javax.swing.JRadioButton();
        modificaNominaActualiza = new javax.swing.JRadioButton();
        lblEmpleado1 = new javax.swing.JLabel();
        agregaEmpleadoActualiza = new javax.swing.JRadioButton();
        eliminaEmpleadoActualiza = new javax.swing.JRadioButton();
        modificaEmpleadoActualiza = new javax.swing.JRadioButton();
        modificaCuotaActualiza = new javax.swing.JRadioButton();
        eliminaCuotaActualiza = new javax.swing.JRadioButton();
        agregaCuotaActualiza = new javax.swing.JRadioButton();
        lblCuota1 = new javax.swing.JLabel();
        btnAdmin = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        cerrarSesion = new javax.swing.JMenu();
        regresar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        agregaNomina.setText("Agrega");

        eliminaNomina.setText("Elimina");

        modificaNomina.setText("Modifica");

        modificaEmpleado.setText("Modifica");

        eliminaEmpleado.setText("Elimina");

        agregaEmpleado.setText("Agrega");

        modificaCuota.setText("Modifica");

        eliminaCuota.setText("Elimina");

        agregaCuota.setText("Agrega");

        lblNomina.setText("Nómina:");

        lblEmpleado.setText("Empleado:");

        lblCuota.setText("Cuota");

        Empleado.setText("Empleado");

        Gerente.setText("Gerente");

        Contador.setText("Contador");
        Contador.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ContadorItemStateChanged(evt);
            }
        });

        jLabel1.setText("Ingrese contraseña:");

        jLabel2.setText("Confirme contraseña:");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnTodo.setText("Seleccionar Todo");
        btnTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblNomina)
                                    .addGap(62, 62, 62)
                                    .addComponent(agregaNomina)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eliminaNomina)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(modificaNomina))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblCuota)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(agregaCuota)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(eliminaCuota)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(modificaCuota))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblEmpleado)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                            .addComponent(agregaEmpleado)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(eliminaEmpleado)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(modificaEmpleado)))
                                    .addGap(114, 114, 114)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(Empleado)
                                .addGap(34, 34, 34)
                                .addComponent(Contador)
                                .addGap(47, 47, 47)
                                .addComponent(Gerente)
                                .addGap(99, 99, 99)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(empleadosBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtContrasenaI)
                                .addComponent(txtContrasenaII, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(160, 160, 160)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addGap(29, 29, 29)
                        .addComponent(btnTodo)
                        .addGap(49, 49, 49))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(empleadosBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtContrasenaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtContrasenaII, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Empleado)
                    .addComponent(Gerente)
                    .addComponent(Contador))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregaNomina)
                    .addComponent(eliminaNomina)
                    .addComponent(modificaNomina)
                    .addComponent(lblNomina))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregaEmpleado)
                    .addComponent(eliminaEmpleado)
                    .addComponent(modificaEmpleado)
                    .addComponent(lblEmpleado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregaCuota)
                    .addComponent(eliminaCuota)
                    .addComponent(modificaCuota)
                    .addComponent(lblCuota))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnTodo))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Agregar", jPanel1);

        tableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableUsuarios);

        btnActualiza.setText("Actualizar");
        btnActualiza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizaActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnUsuarios.setText("Mostrar Usuarios");
        btnUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuariosActionPerformed(evt);
            }
        });

        lblNomina1.setText("Nómina:");

        agregaNominaActualiza.setText("Agrega");

        eliminaNominaActualiza.setText("Elimina");

        modificaNominaActualiza.setText("Modifica");

        lblEmpleado1.setText("Empleado:");

        agregaEmpleadoActualiza.setText("Agrega");

        eliminaEmpleadoActualiza.setText("Elimina");

        modificaEmpleadoActualiza.setText("Modifica");

        modificaCuotaActualiza.setText("Modifica");

        eliminaCuotaActualiza.setText("Elimina");

        agregaCuotaActualiza.setText("Agrega");

        lblCuota1.setText("Cuota");

        btnAdmin.setText("Mostrar Administradores");
        btnAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnUsuarios)
                        .addGap(133, 133, 133)
                        .addComponent(btnAdmin))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(lblNomina1)
                                .addGap(62, 62, 62)
                                .addComponent(agregaNominaActualiza)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eliminaNominaActualiza)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modificaNominaActualiza))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblCuota1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(agregaCuotaActualiza)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eliminaCuotaActualiza)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(modificaCuotaActualiza))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblEmpleado1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(agregaEmpleadoActualiza)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eliminaEmpleadoActualiza)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(modificaEmpleadoActualiza))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminar)
                            .addComponent(btnActualiza))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdmin)
                    .addComponent(btnUsuarios))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agregaNominaActualiza)
                            .addComponent(eliminaNominaActualiza)
                            .addComponent(modificaNominaActualiza)
                            .addComponent(lblNomina1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agregaEmpleadoActualiza)
                            .addComponent(eliminaEmpleadoActualiza)
                            .addComponent(modificaEmpleadoActualiza)
                            .addComponent(lblEmpleado1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agregaCuotaActualiza)
                            .addComponent(eliminaCuotaActualiza)
                            .addComponent(modificaCuotaActualiza)
                            .addComponent(lblCuota1)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnActualiza)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Eliminar", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 547, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 379, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Actualizar", jPanel3);

        cerrarSesion.setText("Cerrar Sesión ");
        cerrarSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cerrarSesionMouseClicked(evt);
            }
        });
        jMenuBar1.add(cerrarSesion);

        regresar.setText("Regresar");
        regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regresarMouseClicked(evt);
            }
        });
        jMenuBar1.add(regresar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ContadorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ContadorItemStateChanged
        if (Contador.isSelected()){
            activarBotenes(true);
        }else{
            activarBotenes(false);
        }
    }//GEN-LAST:event_ContadorItemStateChanged

    //AGREGAR USUARIO NUEVO
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String contrasenaI = txtContrasenaI.getText();
        String contrasenaII = txtContrasenaII.getText();
        
        if (contrasenaI.equals(contrasenaII)){
            Usuario usuario = new Usuario();
            Empleado  empleado = (Empleado) empleadosBox.getSelectedItem();
            
            String role="";
            
            //BUSCA QUE OPCION DE ROLE ELIGIO
            if (Contador.isSelected()){
                role = "CONTADOR";
            }else if (Empleado.isSelected()){
                role = "EMPLEADO";
            }else if (Gerente.isSelected()){
                role = "ADMIN";
            }
            
            //CAPTURA LOS DATOS Y LOS MANDA A LA DB
            if (role != ""){
                usuario.setCodigo(empleado.getCodigo());
                usuario.setContrasena(contrasenaI);
                usuario.setRole(role);
                daoU.agrega(usuario);
                                
                //ASIGNAMOS LOS ROLES
                if(role == "CONTADOR"){
                    
                    //Cuota            
                    usuario.cuoPriv[1] = "select";
                    
                    if (agregaCuota.isSelected()){
                        usuario.cuoPriv[0] = "insert";
                    }
                    
                    if(modificaCuota.isSelected()){
                        usuario.cuoPriv[2] = "update";
                    }
                    if(eliminaCuota.isSelected()){
                        usuario.cuoPriv[3] = "delete";
                    }
                    
                    //Empleado
                    usuario.empPriv[1] = "select";
                    
                    if(agregaEmpleado.isSelected()){
                        usuario.empPriv[0] = "insert";
                    }

                    if (modificaEmpleado.isSelected()){
                        usuario.empPriv[2] = "update";
                    }
                    if(eliminaEmpleado.isSelected()){
                        usuario.empPriv[3] = "delete";
                    }
                    
                    //Nomina
                    usuario.nomPriv[1] = "select";
                    
                    if(agregaNomina.isSelected()){
                        usuario.nomPriv[0] = "insert";
                    }
                    
                    if(modificaNomina.isSelected()){
                        usuario.nomPriv[2] = "update";
                    }
                    if(eliminaNomina.isSelected()){
                        usuario.nomPriv[3] = "delete";
                    }
                    
                    daoU.Actualiza(usuario);
                    
                }else if (role == "EMPLEADO"){
                    //
                    usuario.nomPriv[2] = "select";
                    usuario.empPriv[2] = "select";
                    daoU.Actualiza(usuario);
                }else{
                    daoU.Actualiza(usuario);
                }
                
            }else{
                JOptionPane.showMessageDialog(null, "seleccione su Role");
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Verifique la contraseña");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTodoActionPerformed
        agregaCuota.setSelected(true);
        agregaEmpleado.setSelected(true);
        agregaNomina.setSelected(true);
        
        modificaCuota.setSelected(true);
        modificaEmpleado.setSelected(true);
        modificaNomina.setSelected(true);
        
        eliminaEmpleado.setSelected(true);
        eliminaCuota.setSelected(true);
        eliminaNomina.setSelected(true);
    }//GEN-LAST:event_btnTodoActionPerformed

    private void cerrarSesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarSesionMouseClicked
        Login log = new Login();
        log.setVisible(true);
        dispose();
    }//GEN-LAST:event_cerrarSesionMouseClicked

    private void regresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresarMouseClicked
        if(getUsuario().getRole().equals("CONTADOR")){
            menuInterfazCon conInter = new menuInterfazCon(getUsuario());
            conInter.setVisible(true);
            dispose();
        }else{
            menuInterfazGer gerInter = new menuInterfazGer(getUsuario());
            gerInter.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_regresarMouseClicked

    private void btnActualizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizaActionPerformed
        int row = tableUsuarios.getSelectedRow();
        
        if (row > 0){
            Usuario usuario = new Usuario();
            int codigo = Integer.parseInt(tableUsuarios.getValueAt(row, 0).toString());
            String role = tableUsuarios.getValueAt(row, 2).toString();
            
            usuario.setCodigo(codigo);
            
                                
            //Cuota            
            usuario.cuoPriv[1] = "select";
                    
            if (agregaCuotaActualiza.isSelected()){
                usuario.cuoPriv[0] = "insert";
            }
                    
            if(modificaCuotaActualiza.isSelected()){
                usuario.cuoPriv[2] = "update";
            }
            if(eliminaCuotaActualiza.isSelected()){
                usuario.cuoPriv[3] = "delete";
            }
                    
            //Empleado
            usuario.empPriv[1] = "select";
                    
            if(agregaEmpleadoActualiza.isSelected()){
                usuario.empPriv[0] = "insert";
            }

            if (modificaEmpleadoActualiza.isSelected()){
                usuario.empPriv[2] = "update";
            }
            if(eliminaEmpleadoActualiza.isSelected()){
                usuario.empPriv[3] = "delete";
            }
                    
            //Nomina
            usuario.nomPriv[1] = "select";
                    
             if(agregaNominaActualiza.isSelected()){
                usuario.nomPriv[0] = "insert";
            }
                    
            if(modificaNominaActualiza.isSelected()){
                usuario.nomPriv[2] = "update";
            }
            if(eliminaNominaActualiza.isSelected()){
                usuario.nomPriv[3] = "delete";
            }
            
            daoU.quitarPrivilegios(usuario);
            daoU.Actualiza(usuario);
            
            
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione a un usuario");
        }
        
    }//GEN-LAST:event_btnActualizaActionPerformed

    private void btnAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminActionPerformed
        List <Usuario> listaUsuarios = daoU.obtenUsuarioAdmin();
        agregaEnTabla(listaUsuarios);
        
        activaBotonesConsulta(false);
    }//GEN-LAST:event_btnAdminActionPerformed

    private void btnUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuariosActionPerformed
        List <Usuario> listaUsuarios = daoU.obtenTodos();
        
        agregaEnTabla(listaUsuarios);
        activaBotonesConsulta(true);
    }//GEN-LAST:event_btnUsuariosActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int row = tableUsuarios.getSelectedRow();
        
        if(row >= 0){
                    
            if (JOptionPane.showConfirmDialog(rootPane, "¿Seguro que quiere eliminar?","¡ADVERTENCIA!", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                Usuario usuario = new Usuario();
                int codigo = Integer.parseInt(tableUsuarios.getValueAt(row, 0).toString());
           
            usuario.setCodigo(codigo);
            
                daoU.Elimina(usuario);
                cargarComboBox();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione a un usuario de la tabla");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Contador;
    private javax.swing.JRadioButton Empleado;
    private javax.swing.JRadioButton Gerente;
    private javax.swing.JRadioButton agregaCuota;
    private javax.swing.JRadioButton agregaCuotaActualiza;
    private javax.swing.JRadioButton agregaEmpleado;
    private javax.swing.JRadioButton agregaEmpleadoActualiza;
    private javax.swing.JRadioButton agregaNomina;
    private javax.swing.JRadioButton agregaNominaActualiza;
    private javax.swing.JButton btnActualiza;
    private javax.swing.JButton btnAdmin;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnTodo;
    private javax.swing.JToggleButton btnUsuarios;
    private javax.swing.JMenu cerrarSesion;
    private javax.swing.JRadioButton eliminaCuota;
    private javax.swing.JRadioButton eliminaCuotaActualiza;
    private javax.swing.JRadioButton eliminaEmpleado;
    private javax.swing.JRadioButton eliminaEmpleadoActualiza;
    private javax.swing.JRadioButton eliminaNomina;
    private javax.swing.JRadioButton eliminaNominaActualiza;
    private javax.swing.JComboBox<String> empleadosBox;
    private javax.swing.ButtonGroup grupoBotones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblCuota;
    private javax.swing.JLabel lblCuota1;
    private javax.swing.JLabel lblEmpleado;
    private javax.swing.JLabel lblEmpleado1;
    private javax.swing.JLabel lblNomina;
    private javax.swing.JLabel lblNomina1;
    private javax.swing.JRadioButton modificaCuota;
    private javax.swing.JRadioButton modificaCuotaActualiza;
    private javax.swing.JRadioButton modificaEmpleado;
    private javax.swing.JRadioButton modificaEmpleadoActualiza;
    private javax.swing.JRadioButton modificaNomina;
    private javax.swing.JRadioButton modificaNominaActualiza;
    private javax.swing.JMenu regresar;
    private javax.swing.JTable tableUsuarios;
    private javax.swing.JPasswordField txtContrasenaI;
    private javax.swing.JPasswordField txtContrasenaII;
    // End of variables declaration//GEN-END:variables
}
